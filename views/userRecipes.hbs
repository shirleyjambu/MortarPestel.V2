<h3>My Own Recipes </h3>
{{#if message}}
{{message}}
{{/if }}
<div class="row">
  {{#each recipeData}}
  <div class="col s12 m4 l4 p-2">
    <div class="card small">
    <div class="card-image waves-effect waves-block waves-light">
      <img class="activator" src="{{this.recipe_image}}">
    </div>
    <div class="card-content">
      <span class="card-title activator grey-text text-darken-4">{{this.recipe_name}}<i class="material-icons right">more_vert</i></span>
      <p><a href="user/shareRecipe">Share Recipe</a></p>
    </div>
    <div class="card-reveal">
      <span class="card-title grey-text text-darken-4">
        {{this.recipe_name}}<i class="material-icons right">close</i>
      </span>
      {{this.recipe_html}}
    </div>
    <div class="card-action">
      <a class="tooltipped" data-position="bottom" data-tooltip="Download" href="/api/getPDF/{{this.id}}"><i class="material-icons">cloud_download</i></a>
      <a class="tooltipped" data-position="bottom" data-tooltip="Edit" href="/api/editRecipe/{{this.id}}"><i class="material-icons">edit</i></a>
      <a class="tooltipped" data-id="{{this.id}}" data-position="bottom" data-tooltip="Delete" href="#" onclick="deleteRecipe({{this.id}})"><i class="material-icons">delete_forever</i></a>
      <a class="tooltipped" data-position="bottom" data-tooltip="View" href="/api/viewRecipe/{{this.id}}"><i class="material-icons">view_headline</i></a>
      <a class="tooltipped" data-position="bottom" data-tooltip="Share" href="#" onclick="shareRecipe()"><i class="material-icons">share</i></a>
    </div>
  </div>
</div>
{{/each}}
</div>
<script>
 
 function deleteRecipe (id){
            Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          type: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
          }).then((result) => {
          if (result.value) {
                      return fetch(`/user/deleteRecipe/${id}`)
                    .then(response => {
                      if (!response.ok) {
                        throw new Error(response.statusText)
                      }
                      location.reload();
                      {{!-- return response.json() --}}
                    })
                    .catch(error => {
                      Swal.showValidationMessage(
                        `Request failed: ${error}`
                      )
                    })
            Swal.fire(
              'Deleted!',
              'Your file has been deleted.',
              'success'
            )
          }
          })
 }

  $(document).ready(function(){
    $('.tooltipped').tooltip();
  });

  function shareRecipe (recipeId){
   Swal.fire({
 title: 'Enter the email id?',
 input: 'text',
 inputAttributes: {
   autocapitalize: 'off'
 },
 showCancelButton: true,
 confirmButtonText: 'Look up',
 showLoaderOnConfirm: true,
 preConfirm: (input) => {
   return fetch(`/user/shareRecipe/${input}/${recipeId}`)
     .then(response => {
       if (!response.ok) {
         throw new Error(response.statusText)
       }
       return response.json()
     })
     .catch(error => {
       Swal.showValidationMessage(
         `Request failed: ${error}`
       )
     })
 },
 allowOutsideClick: () => !Swal.isLoading()
}).then((result) => {
 if (result) {
   console.log(result);
   Swal.fire({
            title: `You've shared your recipe with ${result.value.firstName}`,
            type: 'info',
            showCloseButton: true,
            showCancelButton: true,
            focusConfirm: false,
            confirmButtonText:
              '<i class="fa fa-thumbs-up"></i> Great!',
            confirmButtonAriaLabel: 'Thumbs up, great!',
            cancelButtonText:
              '<i class="fa fa-thumbs-down"></i>',
            cancelButtonAriaLabel: 'Thumbs down',
})
   
 }
})
  };
</script>